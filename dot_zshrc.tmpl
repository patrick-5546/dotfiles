# Enable colors and change prompt:
autoload -U colors && colors

# History in cache directory:
export HISTSIZE=10000
export SAVEHIST=10000
export HISTFILE=~/.cache/zsh/history

# Basic auto/tab complete:
autoload -U compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots)		# Include hidden files.

# vi mode
bindkey -v
export KEYTIMEOUT=10
bindkey -M viins 'jk' vi-cmd-mode
bindkey "^R" history-incremental-search-backward
bindkey '^[[3~' delete-char

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

# Use lf to switch directories and bind it to ctrl-o
lfcd () {
    tmp="$(mktemp)"
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
    fi
}
bindkey -s '^o' 'lfcd\n'

# Edit line in vim with ctrl-e:
autoload edit-command-line; zle -N edit-command-line
bindkey '^e' edit-command-line

# Aliases
alias ..='cd ..'
alias ...='cd ../..'
alias btop='bpytop'
alias c='chezmoi'
alias cls='clear'
alias e='exit'
alias grep='rg'
alias h='history'
alias l='ls -alh'
alias ll='ls -lh'
alias llt='ls -lhrt'
alias ls='ls --color=auto'
alias lt='ls -alhrt'
alias md='mkdir -p'
alias rd='rmdir'
alias vim=nvim
# git
alias ga='git add'
alias gb='git branch'
alias gbD='git branch -D'
alias gcl='git clone --recurse-submodules'
alias gcmsg='git commit -m'
alias gd='git diff'
alias gdca='git diff --cached'
alias gmom='git merge origin/$(git_main_branch)'
alias gl='git pull'
alias gp='git push'
alias gpsup='git push --set-upstream origin $(git_current_branch)'
alias gra='git remote add'
alias grv='git remote -v'
alias grrm='git remote remove'
alias grh='git reset'
alias grhh='git reset --hard'
alias grs='git restore'
alias grst='git restore --staged'
alias grm='git rm'
alias grmc='git rm --cached'
alias gst='git status'
alias gsu='git submodule update'
alias gsw='git switch'
alias gswc='git switch -c'
alias gswm='git switch $(git_main_branch)'

# Environment Variables
export PATH=$HOME/.local/bin:$PATH
export VISUAL=nvim
export EDITOR="$VISUAL"
export DOCKER_BUILDKIT=1

# Other Zsh scripts
{{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
source /usr/share/doc/fzf/examples/key-bindings.zsh
{{   else  }}
source /usr/share/fzf/shell/key-bindings.zsh
{{ end }}
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 2>/dev/null
source $HOME/.local/share/zsh-nvm/zsh-nvm.plugin.zsh

# Display system information
#neofetch

# Prompt
eval "$(starship init zsh)"
